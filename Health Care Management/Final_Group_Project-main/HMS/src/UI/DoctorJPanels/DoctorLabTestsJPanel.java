/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.DoctorJPanels;

import Business.Business;
import Doctor.Doctor;
import Hospital.Appointment;
import Hospital.Hospital;
import Lab.LabTests;
import Patient.Patient;
import Reports.TestReport;
import UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thran
 */
public class DoctorLabTestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorLabTestsJPanel
     */
    public Business business;
    public UserAccount userAccount;
    DefaultTableModel testsTableModel;
    public DoctorLabTestsJPanel() {
        initComponents();
    }
    public DoctorLabTestsJPanel(Business business, UserAccount userAccount) {
        initComponents();
        this.business = business;
        this.userAccount = userAccount;
        this.testsTableModel = (DefaultTableModel) doctorTestsTable.getModel();
        
        displayTests();
        populateDropdowns();
    }
    public void populateDropdowns()
    {
        ArrayList<Patient> pts = new ArrayList<Patient>();
        ArrayList<Appointment> aps = this.business.getAppointments().getAppointments();
        for(Appointment a: aps) 
        {
            if (a.getDoctor().getId().equals(userAccount.getPersonId()))
            {
                pts.add(a.getPatient());
            }
        }
        
        for (Patient p : pts)
        {
            patCBox.addItem(p.getId() +  ';'  + p.getFirstName() + ' ' + p.getLastName());
        }
        
        ArrayList<LabTests> tests = this.business.getLabTestsList().getLabTests();
        
        for (LabTests l : tests)
        {
            
            testCBox.addItem(l.getTestId()+';'+ l.getProcedureName());
        }
    }
    public void displayTests()
    {
        ArrayList<TestReport> rs = this.business.getReports().getReports();
        if(rs.size() >= 0) {
            testsTableModel.setRowCount(0);
            for(TestReport p: rs) {
                if (p.getDoctor().getId().equals(userAccount.getPersonId()))
                {
                    Object row[] = new Object[4];
                    row[0] = p.getDoctor().getFirstName() + ' ' + p.getDoctor().getLastName();
                    row[1] = p.getPatient().getFirstName() + ' ' + p.getPatient().getLastName();
                    row[2] = p.getLabtest().getProcedureName();
                    row[3] = p.getStatus();
                    testsTableModel.addRow(row);
                } 
            }
        }        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customUI1 = new necesario.CustomUI();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctorTestsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        patCBox = new javax.swing.JComboBox<>();
        testCBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doctorTestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor", "Patient", "Test name", "Status"
            }
        ));
        jScrollPane1.setViewportView(doctorTestsTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, -1, 230));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Arial Narrow", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Hospital Management System");
        jPanel2.add(jLabel5);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 50));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setText("Select a patient");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, 20));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel2.setText("Test name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        jPanel1.add(patCBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 90, -1));

        jPanel1.add(testCBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 90, -1));

        jButton1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButton1.setText("Send for testing");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 130, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 680));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String patientId = patCBox.getSelectedItem().toString().split(";")[0];
        String testSNo = testCBox.getSelectedItem().toString().split(";")[0];

        Patient p = this.business.getPatients().findPatient(patientId);
        LabTests l= this.business.getLabTestsList().findLabTests(testSNo);
        Doctor doc = null;

        for(Hospital h : this.business.getHospitals().getHospitals())
        {
            for (Doctor d : h.getDoctors().getDoctorsList())
            {
                if(d.getId().equals(userAccount.getPersonId()))
                {
                    doc = d;
                    break;
                }
            }
        }

        this.business.getReports().addReport(doc, p, l);
        displayTests();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private necesario.CustomUI customUI1;
    private javax.swing.JTable doctorTestsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> patCBox;
    private javax.swing.JComboBox<String> testCBox;
    // End of variables declaration//GEN-END:variables
}
