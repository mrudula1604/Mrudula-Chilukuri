/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.PharmacyJPanels;

import Business.Business;
import Pharmacy.Medicine;
import UserAccount.UserAccount;
import com.toedter.calendar.JDateChooser;
import java.awt.GridLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thran
 */
public class MedicineRepositoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MedicineRepositoryJPanel
     */
    public Business business;
    public UserAccount userAccount;
    DefaultTableModel medRepoTableModel;
    public MedicineRepositoryJPanel() {
        initComponents();
    }
     public MedicineRepositoryJPanel(Business business, UserAccount useraccount) {
        initComponents();
        this.business = business;
        this.userAccount = userAccount;
        this.medRepoTableModel = (DefaultTableModel) medicinesTable.getModel();
        
        displayMedicines();
    }
     public void displayMedicines()
    {
        ArrayList<Medicine> medicine = this.business.getMedicines().getMedicineList();
        
        if(medicine.size() >= 0) {
            medRepoTableModel.setRowCount(0);
            for(Medicine m: medicine) {
                Object row[] = new Object[6];
                row[0] = m.getSerialNumber();
                row[1] = m.getMedicineName();
                row[2] = m.getExpiryDate();
                row[3] = m.getAvailableCount();
                row[4] = m.getPrice();
                medRepoTableModel.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medicinesTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        medicinesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "S. NO.", "Medicine Name", "Expriy Date", "Quantity", "Price"
            }
        ));
        jScrollPane1.setViewportView(medicinesTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 510, 120));

        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, -1, -1));

        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setActionCommand("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, -1, -1));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Arial Narrow", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Hospital Management System");
        jPanel2.add(jLabel5);

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int selectedRow = medicinesTable.getSelectedRow();
        if (selectedRow >= 0) {
            
            String medName = medicinesTable.getValueAt(selectedRow, 1).toString();
            Medicine medicine = this.business.getMedicines().findMedicineByName(medName);
         //   JDateChooser expiryDateChooser = new JDateChooser();
           // expiryDateChooser.setDateFormatString("yyyy-MM-dd");
            // Display the agent details in a dialog box
            JTextField medicineNameField = new JTextField(medicine.getMedicineName());
         
         //   JTextField availableCountField = new JTextField((int)medicine.getAvailableCount());
            
            JTextField availableCountField = new JTextField(Integer.toString(medicine.getAvailableCount()));
            JTextField priceField = new JTextField(Float.toString(medicine.getPrice()));
            JPanel panel = new JPanel(new GridLayout(0, 1));
            panel.add(new JLabel("Medicine Name:"));
            panel.add(medicineNameField);
            //panel.add(new JLabel("Expiry Date:"));
          //  panel.add(expiryDateChooser);

           
            panel.add(new JLabel("available count:"));
            panel.add(availableCountField);
            panel.add(new JLabel("Price:"));
            panel.add(priceField);
            
            
            

            int result = JOptionPane.showConfirmDialog(null, panel, "Update medicine Details", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

            if (result == JOptionPane.OK_OPTION) {
                
                if (medicineNameField.getText().isEmpty() || availableCountField.getText().isEmpty() || priceField.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "All fields are required.");
                    return;
                }
                // Update the agent details
                try{
                medicine.setMedicineName(medicineNameField.getText());
                
                medicine.setAvailableCount(Integer.parseInt(availableCountField.getText()));
                medicine.setPrice(Float.parseFloat(priceField.getText()));
                

                // Update the table
                medRepoTableModel.setValueAt(medicine.getMedicineName(), selectedRow, 1);
                
                medRepoTableModel.setValueAt(medicine.getAvailableCount(), selectedRow, 3);
                medRepoTableModel.setValueAt(medicine.getPrice(), selectedRow, 4);
               
            }
                 catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Please enter valid numbers for available count and price.");
                }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row");
        }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int selectedRow = medicinesTable.getSelectedRow();
    if (selectedRow >= 0) {
        String medName = medicinesTable.getValueAt(selectedRow, 1).toString();
        Medicine medicine = this.business.getMedicines().findMedicineByName(medName);
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the medicine " + medName + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirm == JOptionPane.YES_OPTION) {
            // Remove the medicine from the list or database
            this.business.getMedicines().removeMedicine(medicine);
            // Remove the medicine from the table
            medRepoTableModel.removeRow(selectedRow);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Select a Row");
    }
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicinesTable;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
