/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminJPanels;

import Business.Business;
import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author thran
 */
public class DepartmentChartJPanel_old extends javax.swing.JPanel {

    /**
     * Creates new form DepartmentChartJPanel
     */
    Business business;
    public DepartmentChartJPanel_old() {
        initComponents();
    }
 public DepartmentChartJPanel_old(Business business) {
        initComponents();
        this.business= business;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartpanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 255, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout chartpanelLayout = new javax.swing.GroupLayout(chartpanel);
        chartpanel.setLayout(chartpanelLayout);
        chartpanelLayout.setHorizontalGroup(
            chartpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        chartpanelLayout.setVerticalGroup(
            chartpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        add(chartpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 640, 460));

        jButton1.setText("Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
//   int receiver = 0;
//        int donor = 0;
//       
//
//        for (User user : system.getUserDirectory().getUserDirectory()) {
//            if (user.getType() == 'd') {
//                donor++;
//            }
//          if (user.getType() == 'r') {
//                receiver++;
//            }
//        }      
         Map<String, Integer> data = new HashMap<>();
        data.put("Neurologist", 20);
        data.put("Cardiologist", 30);
        data.put("", 15);
        data.put("Department 4", 25);

        // Step 2: Initialize the dataset
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (String key : data.keySet()) {
            dataset.setValue(data.get(key), "Number of Patients", key);
        }

        // Step 3: Create the chart
        JFreeChart chart = ChartFactory.createBarChart(
            "Number of Patients by Department", // Chart title
            "Department", // X-axis label
            "Number of Patients", // Y-axis label
            dataset // Dataset
        );

        // Step 4: Customize the chart
        chart.getCategoryPlot().setRangeGridlinePaint(Color.BLACK);
        chart.getCategoryPlot().getRenderer().setSeriesPaint(0, Color.BLUE);

        // Step 5: Display the chart
        ChartPanel chartPanel = new ChartPanel(chart);
        JFrame frame = new JFrame("Bar Graph");
        frame.getContentPane().add(chartPanel);
        frame.setSize(500, 500);
        frame.setVisible(true);
        int receiver = 20;
        int donor = 20;

        DefaultCategoryDataset pieDataset = new DefaultCategoryDataset();
        final String donor1 = "Donor";
        final String receiver1 = "Receiver";
        final String type = "Type";
        pieDataset.addValue( donor , donor1 , type );
        pieDataset.addValue( receiver , receiver1 , type );
        JFreeChart barChart = ChartFactory.createBarChart(
            "Donors to Receiver Ratio",
            "Category", "Score",
            pieDataset,PlotOrientation.VERTICAL,
            true, true, false);
        //P.setForegroundAlpha(TOP_ALIGNMENT);
       // chart
        ChartPanel panel = new ChartPanel(barChart);
        chartpanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartpanel;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
